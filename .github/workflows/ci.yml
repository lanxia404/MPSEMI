name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    name: Rust Checks
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache cargo target
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: rust
          cache-on-failure: true

      - name: cargo fmt --check
        working-directory: rust
        run: cargo fmt --all --check

      - name: cargo clippy
        working-directory: rust
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: cargo test
        working-directory: rust
        run: cargo test --all --all-features

  cpp:
    name: C++ Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: rust
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo target
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: rust
          cache-on-failure: true

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            cmake \
            ninja-build \
            pkg-config \
            libfcitx5core-dev

      - name: Configure CMake
        run: |
          cmake \
            -S . \
            -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/install"

      - name: Build addon
        run: cmake --build build --config Release --parallel

      - name: Run CTest
        run: ctest --test-dir build --output-on-failure

      - name: Install addon artifacts
        run: cmake --install build --prefix "${{ github.workspace }}/install"
